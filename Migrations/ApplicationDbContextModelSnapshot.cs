// <auto-generated />
using System;
using IA_AbansiBabayiSystemBlazor.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IA_AbansiBabayiSystemBlazor.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.AccountStatus", b =>
                {
                    b.Property<int>("AccountStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AccountStatusId"));

                    b.Property<string>("AccountStatusDescription")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("AccountStatusId");

                    b.ToTable("AccountStatus", (string)null);
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.AddEvent", b =>
                {
                    b.Property<int>("EventId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EventId"));

                    b.Property<DateTime?>("EventDate")
                        .HasColumnType("datetime");

                    b.Property<string>("EventDescription")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("EventImagePath")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("EventLocation")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("EventTitle")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.HasKey("EventId");

                    b.ToTable("AddEvents");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int?>("AccountStatusId")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("MustChangePassword")
                        .HasColumnType("bit");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("AccountStatusId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.LeaderPosition", b =>
                {
                    b.Property<int>("LeaderPositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaderPositionId"));

                    b.Property<string>("LeaderPositionName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LeaderPosition");

                    b.HasKey("LeaderPositionId")
                        .HasName("PK_LeaderRole");

                    b.ToTable("LeaderPosition", (string)null);
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int?>("ProductCategoryId")
                        .HasColumnType("int")
                        .HasColumnName("ProductCategoryID");

                    b.Property<string>("ProductDescription")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("ProductImagePath")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("ProductName")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("ProductPrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("ProductStock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("ProductCategoryId");

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.ProductCategory", b =>
                {
                    b.Property<int>("ProductCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductCategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductCategoryId"));

                    b.Property<string>("ProductCategoryName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("ProductCategoryId");

                    b.ToTable("ProductCategory", (string)null);
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.ProductPurchase", b =>
                {
                    b.Property<int>("ProductPurchaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductPurchaseID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductPurchaseId"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<DateTime?>("ProductPurchaseDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("ProductPurchasePrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("ProductPurchaseQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(19, 2)")
                        .HasComputedColumnSql("([ProductPurchaseQuantity]*[ProductPurchasePrice])", false);

                    b.HasKey("ProductPurchaseId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductPurchases");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.ProductSale", b =>
                {
                    b.Property<int>("ProductSaleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductSaleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductSaleId"));

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<DateTime?>("ProductSaleDate")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("ProductSalePrice")
                        .HasColumnType("decimal(8, 2)");

                    b.Property<int?>("ProductSaleQuantity")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalCost")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("decimal(19, 2)")
                        .HasComputedColumnSql("([ProductSaleQuantity]*[ProductSalePrice])", true);

                    b.HasKey("ProductSaleId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductSales");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopDetail", b =>
                {
                    b.Property<int>("TroopDetailsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TroopDetailsId"));

                    b.Property<string>("TroopAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("TroopAgeLevel")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("TroopBarangayCommittee")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime>("TroopBirthdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime>("TroopDateApplied")
                        .HasColumnType("datetime");

                    b.Property<string>("TroopDistrictCommittee")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("TroopMailingAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("TroopName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TroopSponsoringGroup")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<string>("TroopStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TroopTroopTelNo")
                        .HasColumnType("int");

                    b.Property<string>("TroopType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("TroopDetailsId");

                    b.ToTable("TroopDetails");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopInformation", b =>
                {
                    b.Property<int>("TroopInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TroopInfoId"));

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TroopDetailsId")
                        .HasColumnType("int");

                    b.Property<int?>("TroopLeaderId")
                        .HasColumnType("int");

                    b.Property<int?>("TroopMemId")
                        .HasColumnType("int");

                    b.Property<int?>("TroopNo")
                        .HasColumnType("int");

                    b.HasKey("TroopInfoId");

                    b.HasIndex(new[] { "TroopDetailsId" }, "IX_TroopInformations_TroopDetailsId");

                    b.HasIndex(new[] { "TroopLeaderId" }, "IX_TroopInformations_TroopLeaderId");

                    b.HasIndex(new[] { "TroopMemId" }, "IX_TroopInformations_TroopMemId");

                    b.ToTable("TroopInformations");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopLeader", b =>
                {
                    b.Property<int>("LeaderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaderId"));

                    b.Property<string>("ApplicationUserId")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LeaderBeneficiary")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("LeaderBirthdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("LeaderDateRegistered")
                        .HasColumnType("datetime");

                    b.Property<string>("LeaderEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LeaderFname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LeaderLname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LeaderMname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("LeaderPositionId")
                        .HasColumnType("int");

                    b.Property<string>("LeaderRegStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LeaderRegisteredEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("LeaderRole")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LeaderTorNt")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("LeaderTorNT");

                    b.Property<int?>("LeaderTroopNo")
                        .HasColumnType("int")
                        .HasColumnName("LeaderTroopNo");

                    b.HasKey("LeaderId")
                        .HasName("PK_RegisteredTroopLeaders");

                    b.HasIndex("ApplicationUserId");

                    b.HasIndex("LeaderPositionId");

                    b.ToTable("TroopLeaders");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopMember", b =>
                {
                    b.Property<int>("TroopMemId")
                        .HasColumnType("int");

                    b.Property<string>("ApplicationUserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("TroopMemBeneficiary")
                        .HasMaxLength(250)
                        .IsUnicode(false)
                        .HasColumnType("varchar(250)");

                    b.Property<DateTime?>("TroopMemBirthdate")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TroopMemDateRegistered")
                        .HasColumnType("datetime");

                    b.Property<string>("TroopMemEmail")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TroopMemEmailRegistered")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("TroopMemFname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TroopMemGradeOrYear")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TroopMemLname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TroopMemMname")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("TroopMemRegStatus")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<int>("TroopMemRole")
                        .HasColumnType("int");

                    b.Property<int?>("TroopMemScoutNumber")
                        .HasColumnType("int");

                    b.HasKey("TroopMemId")
                        .HasName("PK_RegisteredTroopMembers");

                    b.HasIndex(new[] { "ApplicationUserId" }, "IX_TroopMembers_ApplicationUserId");

                    b.ToTable("TroopMembers");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.ApplicationUser", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.AccountStatus", "AccountStatus")
                        .WithMany("AspNetUsers")
                        .HasForeignKey("AccountStatusId")
                        .HasConstraintName("FK_AspNetUsers_AccountStatus");

                    b.Navigation("AccountStatus");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.Product", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.ProductCategory", "ProductCategory")
                        .WithMany("Products")
                        .HasForeignKey("ProductCategoryId")
                        .HasConstraintName("FK_Product_ProductCategory");

                    b.Navigation("ProductCategory");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.ProductPurchase", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.Product", "Product")
                        .WithMany("ProductPurchases")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductPurchases_Product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.ProductSale", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.Product", "Product")
                        .WithMany("ProductSales")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK_ProductSales_Product");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopInformation", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.TroopDetail", "TroopDetails")
                        .WithMany("TroopInformations")
                        .HasForeignKey("TroopDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.TroopLeader", "TroopLeader")
                        .WithMany("TroopInformations")
                        .HasForeignKey("TroopLeaderId")
                        .HasConstraintName("FK_TroopInformations_RegisteredTroopLeaders_TroopLeaderId");

                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.TroopMember", "TroopMem")
                        .WithMany("TroopInformations")
                        .HasForeignKey("TroopMemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_TroopInformations_RegisteredTroopMembers_TroopMemId");

                    b.Navigation("TroopDetails");

                    b.Navigation("TroopLeader");

                    b.Navigation("TroopMem");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopLeader", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.ApplicationUser", "ApplicationUser")
                        .WithMany()
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_TroopLeaders_AspNetUsers");

                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.LeaderPosition", "LeaderPosition")
                        .WithMany("TroopLeaders")
                        .HasForeignKey("LeaderPositionId")
                        .HasConstraintName("FK_TroopLeaders_LeaderPosition");

                    b.Navigation("ApplicationUser");

                    b.Navigation("LeaderPosition");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("IA_AbansiBabayiSystemBlazor.Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.AccountStatus", b =>
                {
                    b.Navigation("AspNetUsers");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.LeaderPosition", b =>
                {
                    b.Navigation("TroopLeaders");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.Product", b =>
                {
                    b.Navigation("ProductPurchases");

                    b.Navigation("ProductSales");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.ProductCategory", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopDetail", b =>
                {
                    b.Navigation("TroopInformations");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopLeader", b =>
                {
                    b.Navigation("TroopInformations");
                });

            modelBuilder.Entity("IA_AbansiBabayiSystemBlazor.Data.Models.TroopMember", b =>
                {
                    b.Navigation("TroopInformations");
                });
#pragma warning restore 612, 618
        }
    }
}
